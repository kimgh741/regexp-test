{"id":"main.js","dependencies":[{"name":"D:\\FrontEndPJT\\regexp\\package.json","includedInParent":true,"mtime":1646661206617}],"generated":{"js":"var str = \"\\n010-1234-1234\\nthesecond@gamil.com\\nhttps://www.omdbapi.com/?apikey=7035c60c&s=frozen\\nThe quick brown fox jumps over the lazy dog.\\nabbcccdddd\\n\";\nvar regexp = /(?<=@).{1,}/g; //  \\ 기호를 이용해서 .이라는 문자를 찾을 수 있도록 표현 할 수 있다. $앞에 있는 하나의 단어로 끝나는 부분을 찾아서 일치 시킨다.  \n\nconsole.log(str.match(regexp));"},"sourceMaps":{"js":{"mappings":[{"generated":{"line":1,"column":0},"source":"main.js","original":{"line":1,"column":0}},{"name":"str","generated":{"line":1,"column":4},"source":"main.js","original":{"line":1,"column":6}},{"generated":{"line":1,"column":7},"source":"main.js","original":{"line":1,"column":9}},{"generated":{"line":1,"column":159},"source":"main.js","original":{"line":1,"column":0}},{"generated":{"line":2,"column":0},"source":"main.js","original":{"line":8,"column":0}},{"name":"regexp","generated":{"line":2,"column":4},"source":"main.js","original":{"line":8,"column":6}},{"generated":{"line":2,"column":10},"source":"main.js","original":{"line":8,"column":12}},{"generated":{"line":2,"column":13},"source":"main.js","original":{"line":8,"column":15}},{"generated":{"line":2,"column":27},"source":"main.js","original":{"line":8,"column":0}},{"generated":{"line":2,"column":29},"source":"main.js","original":{"line":8,"column":31}},{"name":"console","generated":{"line":4,"column":0},"source":"main.js","original":{"line":9,"column":0}},{"generated":{"line":4,"column":7},"source":"main.js","original":{"line":9,"column":7}},{"name":"log","generated":{"line":4,"column":8},"source":"main.js","original":{"line":9,"column":8}},{"generated":{"line":4,"column":11},"source":"main.js","original":{"line":9,"column":0}},{"name":"str","generated":{"line":4,"column":12},"source":"main.js","original":{"line":9,"column":12}},{"generated":{"line":4,"column":15},"source":"main.js","original":{"line":9,"column":15}},{"name":"match","generated":{"line":4,"column":16},"source":"main.js","original":{"line":9,"column":16}},{"generated":{"line":4,"column":21},"source":"main.js","original":{"line":9,"column":12}},{"name":"regexp","generated":{"line":4,"column":22},"source":"main.js","original":{"line":9,"column":22}},{"generated":{"line":4,"column":28},"source":"main.js","original":{"line":9,"column":12}},{"generated":{"line":4,"column":29},"source":"main.js","original":{"line":9,"column":0}}],"sources":{"main.js":"const str = `\r\n010-1234-1234\r\nthesecond@gamil.com\r\nhttps://www.omdbapi.com/?apikey=7035c60c&s=frozen\r\nThe quick brown fox jumps over the lazy dog.\r\nabbcccdddd\r\n`\r\nconst regexp = /(?<=@).{1,}/g  //  \\ 기호를 이용해서 .이라는 문자를 찾을 수 있도록 표현 할 수 있다. $앞에 있는 하나의 단어로 끝나는 부분을 찾아서 일치 시킨다.  \r\nconsole.log(str.match(regexp))\r\n\r\n"},"lineCount":null}},"error":null,"hash":"9a8675df1de87f762788096c46a7a633","cacheData":{"env":{}}}